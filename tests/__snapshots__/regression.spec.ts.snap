// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Federation run basic query 1`] = `
{
  "data": {
    "me": {
      "account": {
        "id": "google",
        "name": "Google",
      },
      "id": "aarne",
      "identity": "google",
      "name": "Aarne Laur",
    },
    "users": [
      {
        "account": {
          "name": "Google",
        },
        "id": "aarne",
        "identity": "fake",
      },
      {
        "account": {
          "name": "Google",
        },
        "id": "robert",
        "identity": "fake",
      },
    ],
  },
}
`;

exports[`Federation supergraph is constructed correctly 1`] = `
"
schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
  
  
  
  
  
  
 {
  query: Query
  
  
}


  directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

  directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
    type: String
    external: Boolean
    override: String
    usedOverridden: Boolean
  ) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

  directive @join__graph(name: String!, url: String!) on ENUM_VALUE

  directive @join__implements(
    graph: join__Graph!
    interface: String!
  ) repeatable on OBJECT | INTERFACE

  directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    extension: Boolean! = false
    resolvable: Boolean! = true
    isInterfaceObject: Boolean! = false
  ) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

  directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

  scalar join__FieldSet


  directive @link(
    url: String
    as: String
    for: link__Purpose
    import: [link__Import]
  ) repeatable on SCHEMA

  scalar link__Import

  enum link__Purpose  {
    """
    \`SECURITY\` features provide metadata necessary to securely resolve fields.
    """
    SECURITY

    """
    \`EXECUTION\` features provide metadata necessary for operation execution.
    """
    EXECUTION
  }







enum join__Graph  {
  ACCOUNTS @join__graph(name: "accounts", url: "http://localhost:4006/graphql") 
  LOCAL @join__graph(name: "local", url: "http://localhost/graphql") 
  USERS @join__graph(name: "users", url: "http://localhost:4005/graphql") 
}

type Query @join__type(graph: ACCOUNTS)  @join__type(graph: LOCAL)  @join__type(graph: USERS)   {
  me: User @join__field(graph: LOCAL) 
  users: [User!] @join__field(graph: USERS) 
}

type Account @join__type(graph: ACCOUNTS, key: "id")  @join__type(graph: USERS, key: "id")   {
  id: ID!
  name: String! @join__field(graph: ACCOUNTS) 
}

type User @join__type(graph: LOCAL, key: "id")  @join__type(graph: USERS, key: "id")   {
  id: ID!
  identity: String @join__field(graph: LOCAL) 
  name: String! @join__field(graph: USERS) 
  account: Account @join__field(graph: USERS) 
}
    "
`;
